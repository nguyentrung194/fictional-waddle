{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\hello-next\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from './components/MyLayout.js';\nimport cheerio from 'cheerio';\nimport axios from 'axios';\nconst layoutStyle = {\n  marginTop: 10,\n  marginBottom: 20,\n  padding: 20,\n  border: '1px solid #DDD'\n}; // client side\n\nexport default (props => {\n  console.log(props);\n  return __jsx(Layout, {\n    content: __jsx(\"div\", {\n      style: layoutStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }\n    }, props.urlsImg.map(url => __jsx(\"img\", {\n      src: url,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  });\n}); // server side\n\nexport async function getServerSideProps(context) {\n  const URL = 'https://tuoitre.vn/kinh-doanh.htm';\n  const resFromUrl = await axios.get(URL);\n  const $ = cheerio.load(resFromUrl.data);\n  let links = [];\n  $('.list-news-content').find('li.news-item').find('a.pos-rlt').find('img.img212x132').each((index, element) => {\n    links.push($(element).attr(\"src\"));\n  });\n  const urlsImg = links.filter(n => n != undefined);\n  return {\n    props: {\n      urlsImg\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/hello-next/pages/index.tsx"],"names":["Layout","cheerio","axios","layoutStyle","marginTop","marginBottom","padding","border","props","console","log","urlsImg","map","url","getServerSideProps","context","URL","resFromUrl","get","$","load","data","links","find","each","index","element","push","attr","filter","n","undefined"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,SAAS,EAAE,EADO;AAElBC,EAAAA,YAAY,EAAE,EAFI;AAGlBC,EAAAA,OAAO,EAAE,EAHS;AAIlBC,EAAAA,MAAM,EAAE;AAJU,CAApB,C,CAQA;;AACA,gBAAgBC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EACf;AAAK,MAAA,KAAK,EAAEL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAmBC,GAAD,IACjB;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAe,MAAA,GAAG,EAAC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAXD,E,CAaA;;AACA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA0C;AAC/C,QAAMC,GAAG,GAAG,mCAAZ;AACA,QAAMC,UAAU,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAUF,GAAV,CAAzB;AAEA,QAAMG,CAAC,GAAGlB,OAAO,CAACmB,IAAR,CAAaH,UAAU,CAACI,IAAxB,CAAV;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAH,EAAAA,CAAC,CAAC,oBAAD,CAAD,CACGI,IADH,CACQ,cADR,EAEGA,IAFH,CAEQ,WAFR,EAGGA,IAHH,CAGQ,gBAHR,EAIGC,IAJH,CAIQ,CAACC,KAAD,EAAQC,OAAR,KAAkB;AACtBJ,IAAAA,KAAK,CAACK,IAAN,CAAWR,CAAC,CAACO,OAAD,CAAD,CAAWE,IAAX,CAAgB,KAAhB,CAAX;AACD,GANH;AAOE,QAAMjB,OAAO,GAAGW,KAAK,CAACO,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIC,SAAvB,CAAhB;AACA,SAAO;AACLvB,IAAAA,KAAK,EAAE;AAACG,MAAAA;AAAD;AADF,GAAP;AAIH","sourcesContent":["import Layout from './components/MyLayout.js';\r\nimport cheerio from 'cheerio'\r\nimport axios from 'axios'\r\n\r\nconst layoutStyle = {\r\n  marginTop: 10,\r\n  marginBottom: 20,\r\n  padding: 20,\r\n  border: '1px solid #DDD'\r\n};\r\n\r\n\r\n// client side\r\nexport default (props) => {\r\n  console.log(props)\r\n  return (\r\n    <Layout content={\r\n    <div style={layoutStyle}>\r\n      {props.urlsImg.map((url)=>(\r\n        <img src={url} alt=\"\"/>\r\n      ))}\r\n    </div>\r\n    }/>\r\n  )\r\n}\r\n\r\n// server side\r\nexport async function getServerSideProps(context){\r\n  const URL = 'https://tuoitre.vn/kinh-doanh.htm'\r\n  const resFromUrl = await axios.get(URL)\r\n\r\n  const $ = cheerio.load(resFromUrl.data)\r\n  let links = [];\r\n  $('.list-news-content')\r\n    .find('li.news-item')\r\n    .find('a.pos-rlt')\r\n    .find('img.img212x132')\r\n    .each((index, element)=>{\r\n      links.push($(element).attr(\"src\"))\r\n    })\r\n    const urlsImg = links.filter(n => n != undefined )\r\n    return {\r\n      props: {urlsImg}\r\n    }  \r\n\r\n}"]},"metadata":{},"sourceType":"module"}