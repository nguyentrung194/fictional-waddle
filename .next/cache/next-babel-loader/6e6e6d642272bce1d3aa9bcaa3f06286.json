{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\hello-next\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Layout from './components/MyLayout';\nimport cheerio from 'cheerio';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport Post from './components/Post';\nconst layoutStyle = {\n  marginTop: '10',\n  marginBottom: '20',\n  padding: '20',\n  border: '1px solid #DDD'\n};\nconst postStyle = {\n  border: '1px solid #ddd',\n  borderRadius: '4px',\n  padding: '5px',\n  width: '200px'\n};\n/****\r\n * Bat dau config\r\n */\n\nconst myConfig = {\n  webSite: {\n    url: 'https://vn.indeed.com/jobs?q=&l=Vi%E1%BB%87t+Nam&start=',\n    parent: '#resultsCol',\n    child: '.jobsearch-SerpJobCard',\n    title: 'a[data-tn-element=\"jobTitle\"]',\n    company: '.company',\n    address: '.accessible-contrast-color-location',\n    summary: '.summary'\n  }\n}; // client side\n\nexport default (({\n  titleResult,\n  companyResult,\n  addressResult,\n  summaryResult\n}) => {\n  console.log({\n    titleResult,\n    companyResult,\n    addressResult,\n    summaryResult\n  });\n  let key = 0;\n  const result = titleResult.map((title, index) => {\n    title: title;\n\n    company: companyResult[index];\n\n    address: addressResult[index];\n\n    summary: summaryResult[index];\n  });\n  console.log(result);\n  return __jsx(Layout, {\n    content: __jsx(\"div\", {\n      style: layoutStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Result\"), __jsx(Post, {\n      content: result,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n}); // server side\n\nexport async function getServerSideProps() {\n  let couter = 10;\n  let title = [];\n  let company = [];\n  let address = [];\n  let summary = [];\n  let summaryTemp = [];\n\n  while (couter < 20) {\n    let URL = myConfig.webSite.url + {\n      couter\n    };\n    let resFromUrl = await axios.get(URL);\n    let $ = cheerio.load(resFromUrl.data);\n    $(myConfig.webSite.parent).find(myConfig.webSite.child).each((i, el) => {\n      $(el).find(myConfig.webSite.title).each((i, el) => title.push($(el).text()));\n      $(el).find(myConfig.webSite.company).each((i, el) => company.push($(el).text()));\n      $(el).find(myConfig.webSite.address).each((i, el) => address.push($(el).text()));\n      $(el).find(myConfig.webSite.summary).each((i, el) => {\n        $(el).find('li').each((i, el) => {\n          summaryTemp.push($(el).text());\n        });\n        summary.push(summaryTemp);\n        summaryTemp = [];\n      });\n    });\n    couter += 10;\n  }\n\n  const titleResult = title.filter(n => n != undefined);\n  const addressResult = address.filter(n => n != undefined);\n  const companyResult = company.filter(n => n != undefined);\n  const summaryResult = summary.filter(n => n != undefined);\n  return {\n    props: {\n      titleResult: titleResult,\n      companyResult: companyResult,\n      addressResult: addressResult,\n      summaryResult: summaryResult\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/hello-next/pages/index.js"],"names":["Layout","cheerio","axios","React","useState","Post","layoutStyle","marginTop","marginBottom","padding","border","postStyle","borderRadius","width","myConfig","webSite","url","parent","child","title","company","address","summary","titleResult","companyResult","addressResult","summaryResult","console","log","key","result","map","index","getServerSideProps","couter","summaryTemp","URL","resFromUrl","get","$","load","data","find","each","i","el","push","text","filter","n","undefined","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,SAAS,EAAE,IADO;AAElBC,EAAAA,YAAY,EAAE,IAFI;AAGlBC,EAAAA,OAAO,EAAE,IAHS;AAIlBC,EAAAA,MAAM,EAAE;AAJU,CAApB;AAMA,MAAMC,SAAS,GAAC;AACdD,EAAAA,MAAM,EAAE,gBADM;AAEdE,EAAAA,YAAY,EAAE,KAFA;AAGdH,EAAAA,OAAO,EAAE,KAHK;AAIdI,EAAAA,KAAK,EAAE;AAJO,CAAhB;AAOA;;;;AAIC,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,yDADE;AAEPC,IAAAA,MAAM,EAAE,aAFD;AAGPC,IAAAA,KAAK,EAAE,wBAHA;AAIPC,IAAAA,KAAK,EAAE,+BAJA;AAKPC,IAAAA,OAAO,EAAE,UALF;AAMPC,IAAAA,OAAO,EAAE,qCANF;AAOPC,IAAAA,OAAO,EAAE;AAPF;AADO,CAAjB,C,CAcD;;AACA,gBAAe,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA,aAA7B;AAA4CC,EAAAA;AAA5C,CAAD,KAAgE;AAC7EC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,IAAAA,WAAD;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,aAA7B;AAA4CC,IAAAA;AAA5C,GAAZ;AACA,MAAIG,GAAG,GAAC,CAAR;AACA,QAAMC,MAAM,GAAGP,WAAW,CAACQ,GAAZ,CAAgB,CAACZ,KAAD,EAAQa,KAAR,KAAgB;AAACb,IAAAA,KAAK,EAAEA,KAAK;;AAAEC,IAAAA,OAAO,EAAEI,aAAa,CAACQ,KAAD,CAAb;;AAAsBX,IAAAA,OAAO,EAAEI,aAAa,CAACO,KAAD,CAAb;;AAAsBV,IAAAA,OAAO,EAAEI,aAAa,CAACM,KAAD,CAAb;AAAqB,GAA3I,CAAf;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EACb;AAAK,MAAA,KAAK,EAAExB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAEwB,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAbD,E,CAeA;;AACA,OAAO,eAAeG,kBAAf,GAAmC;AACxC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIf,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIa,WAAW,GAAG,EAAlB;;AACA,SAAMD,MAAM,GAAC,EAAb,EAAgB;AACd,QAAIE,GAAG,GAAGtB,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,GAAqB;AAACkB,MAAAA;AAAD,KAA/B;AACA,QAAIG,UAAU,GAAG,MAAMnC,KAAK,CAACoC,GAAN,CAAUF,GAAV,CAAvB;AACA,QAAIG,CAAC,GAAGtC,OAAO,CAACuC,IAAR,CAAaH,UAAU,CAACI,IAAxB,CAAR;AAEAF,IAAAA,CAAC,CAACzB,QAAQ,CAACC,OAAT,CAAiBE,MAAlB,CAAD,CACCyB,IADD,CACM5B,QAAQ,CAACC,OAAT,CAAiBG,KADvB,EAECyB,IAFD,CAEM,CAACC,CAAD,EAAIC,EAAJ,KAAS;AACbN,MAAAA,CAAC,CAACM,EAAD,CAAD,CAAMH,IAAN,CAAW5B,QAAQ,CAACC,OAAT,CAAiBI,KAA5B,EACCwB,IADD,CACM,CAACC,CAAD,EAAIC,EAAJ,KAAS1B,KAAK,CAAC2B,IAAN,CAAYP,CAAC,CAACM,EAAD,CAAD,CAAME,IAAN,EAAZ,CADf;AAEAR,MAAAA,CAAC,CAACM,EAAD,CAAD,CAAMH,IAAN,CAAW5B,QAAQ,CAACC,OAAT,CAAiBK,OAA5B,EACCuB,IADD,CACM,CAACC,CAAD,EAAIC,EAAJ,KAASzB,OAAO,CAAC0B,IAAR,CAAaP,CAAC,CAACM,EAAD,CAAD,CAAME,IAAN,EAAb,CADf;AAEAR,MAAAA,CAAC,CAACM,EAAD,CAAD,CAAMH,IAAN,CAAW5B,QAAQ,CAACC,OAAT,CAAiBM,OAA5B,EACCsB,IADD,CACM,CAACC,CAAD,EAAIC,EAAJ,KAASxB,OAAO,CAACyB,IAAR,CAAaP,CAAC,CAACM,EAAD,CAAD,CAAME,IAAN,EAAb,CADf;AAEAR,MAAAA,CAAC,CAACM,EAAD,CAAD,CAAMH,IAAN,CAAW5B,QAAQ,CAACC,OAAT,CAAiBO,OAA5B,EACCqB,IADD,CACM,CAACC,CAAD,EAAIC,EAAJ,KAAS;AACbN,QAAAA,CAAC,CAACM,EAAD,CAAD,CAAMH,IAAN,CAAW,IAAX,EAAiBC,IAAjB,CAAsB,CAACC,CAAD,EAAIC,EAAJ,KAAS;AAC7BV,UAAAA,WAAW,CAACW,IAAZ,CAAiBP,CAAC,CAACM,EAAD,CAAD,CAAME,IAAN,EAAjB;AACD,SAFD;AAGAzB,QAAAA,OAAO,CAACwB,IAAR,CAAaX,WAAb;AACAA,QAAAA,WAAW,GAAG,EAAd;AACD,OAPD;AAQD,KAjBD;AAkBAD,IAAAA,MAAM,IAAE,EAAR;AACD;;AACD,QAAMX,WAAW,GAAGJ,KAAK,CAAC6B,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIC,SAAvB,CAApB;AACA,QAAMzB,aAAa,GAAGJ,OAAO,CAAC2B,MAAR,CAAeC,CAAC,IAAIA,CAAC,IAAIC,SAAzB,CAAtB;AACA,QAAM1B,aAAa,GAAGJ,OAAO,CAAC4B,MAAR,CAAeC,CAAC,IAAIA,CAAC,IAAIC,SAAzB,CAAtB;AACA,QAAMxB,aAAa,GAAGJ,OAAO,CAAC0B,MAAR,CAAeC,CAAC,IAAIA,CAAC,IAAIC,SAAzB,CAAtB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL5B,MAAAA,WAAW,EAAEA,WADR;AAELC,MAAAA,aAAa,EAAEA,aAFV;AAGLC,MAAAA,aAAa,EAAEA,aAHV;AAILC,MAAAA,aAAa,EAAEA;AAJV;AADF,GAAP;AASD","sourcesContent":["import Layout from './components/MyLayout';\r\nimport cheerio from 'cheerio';\r\nimport axios from 'axios';\r\nimport React, {useState} from 'react';\r\nimport Post from './components/Post'\r\n\r\nconst layoutStyle = {\r\n  marginTop: '10',\r\n  marginBottom: '20',\r\n  padding: '20',\r\n  border: '1px solid #DDD'\r\n};\r\nconst postStyle={\r\n  border: '1px solid #ddd',\r\n  borderRadius: '4px',\r\n  padding: '5px',\r\n  width: '200px',\r\n};\r\n\r\n/****\r\n * Bat dau config\r\n */\r\n\r\n const myConfig = {\r\n  webSite: {\r\n    url: 'https://vn.indeed.com/jobs?q=&l=Vi%E1%BB%87t+Nam&start=',\r\n    parent: '#resultsCol',\r\n    child: '.jobsearch-SerpJobCard',\r\n    title: 'a[data-tn-element=\"jobTitle\"]',\r\n    company: '.company',\r\n    address: '.accessible-contrast-color-location',\r\n    summary: '.summary'\r\n  },\r\n}\r\n\r\n\r\n\r\n// client side\r\nexport default ({titleResult, companyResult, addressResult, summaryResult}) => {\r\n  console.log({titleResult, companyResult, addressResult, summaryResult})\r\n  let key=0;\r\n  const result = titleResult.map((title, index)=>{title: title; company: companyResult[index]; address: addressResult[index]; summary: summaryResult[index]})\r\n  console.log(result)\r\n  return (\r\n    <Layout content={\r\n      <div style={layoutStyle}>\r\n        <h2>Result</h2>\r\n        <Post content={result} />\r\n      </div>\r\n    }/>  \r\n  )\r\n}\r\n\r\n// server side\r\nexport async function getServerSideProps(){\r\n  let couter = 10\r\n  let title = [];\r\n  let company = [];\r\n  let address = [];\r\n  let summary = [];\r\n  let summaryTemp = [];\r\n  while(couter<20){\r\n    let URL = myConfig.webSite.url+{couter}\r\n    let resFromUrl = await axios.get(URL)\r\n    let $ = cheerio.load(resFromUrl.data)\r\n    \r\n    $(myConfig.webSite.parent)\r\n    .find(myConfig.webSite.child)\r\n    .each((i, el)=>{\r\n      $(el).find(myConfig.webSite.title)\r\n      .each((i, el)=>title.push(($(el).text())))\r\n      $(el).find(myConfig.webSite.company)\r\n      .each((i, el)=>company.push($(el).text()))\r\n      $(el).find(myConfig.webSite.address)\r\n      .each((i, el)=>address.push($(el).text()))\r\n      $(el).find(myConfig.webSite.summary)\r\n      .each((i, el)=>{\r\n        $(el).find('li').each((i, el)=>{\r\n          summaryTemp.push($(el).text())\r\n        })\r\n        summary.push(summaryTemp)\r\n        summaryTemp = []\r\n      })\r\n    })\r\n    couter+=10\r\n  }\r\n  const titleResult = title.filter(n => n != undefined )\r\n  const addressResult = address.filter(n => n != undefined )\r\n  const companyResult = company.filter(n => n != undefined )\r\n  const summaryResult = summary.filter(n => n != undefined )\r\n\r\n  return {\r\n    props: {\r\n      titleResult: titleResult,\r\n      companyResult: companyResult,\r\n      addressResult: addressResult,\r\n      summaryResult: summaryResult,\r\n    }\r\n  }  \r\n\r\n}"]},"metadata":{},"sourceType":"module"}