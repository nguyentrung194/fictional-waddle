{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\hello-next\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Layout from './components/MyLayout';\nimport cheerio from 'cheerio';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport Post from './components/Post';\nconst layoutStyle = {\n  marginTop: 10,\n  marginBottom: 20,\n  padding: 20,\n  border: '1px solid #DDD'\n};\nconst postStyle = {\n  border: '1px solid #ddd',\n  borderRadius: '4px',\n  padding: '5px',\n  width: '200px'\n};\n/****\r\n * Bat dau config\r\n */\n\nconst myConfig = {\n  webSite: {\n    muctim: {\n      url: 'https://vn.indeed.com/jobs?q=&l=Vi%E1%BB%87t+Nam&start=10',\n      parent: '#resultsCol',\n      child: '.jobsearch-SerpJobCard',\n      title: 'a[data-tn-element=\"jobTitle\"]',\n      company: ''\n    }\n  }\n}; // client side\n\nexport default (({\n  props1\n}) => {\n  console.log({\n    props1\n  });\n  let key = 0;\n  return __jsx(Layout, {\n    content: __jsx(\"div\", {\n      style: layoutStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Result\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n}); // server side\n\nexport async function getServerSideProps() {\n  let URL = myConfig.webSite.muctim.url;\n  let resFromUrl = await axios.get(URL);\n  let $ = cheerio.load(resFromUrl.data);\n  let links = [];\n  let title = [];\n  let time = [];\n  let imgs = [];\n  let description = [];\n  $(myConfig.webSite.muctim.parent).find(myConfig.webSite.muctim.child).find(myConfig.webSite.muctim.title).each((i, el) => {\n    title.push($(el).text());\n  });\n  const urlsImgId1 = title.filter(n => n != undefined);\n  const urlsImgId2 = imgs.filter(n => n != undefined);\n  const urlsImgId3 = time.filter(n => n != undefined);\n  return {\n    props: {\n      props1: urlsImgId1\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/hello-next/pages/index.js"],"names":["Layout","cheerio","axios","React","useState","Post","layoutStyle","marginTop","marginBottom","padding","border","postStyle","borderRadius","width","myConfig","webSite","muctim","url","parent","child","title","company","props1","console","log","key","getServerSideProps","URL","resFromUrl","get","$","load","data","links","time","imgs","description","find","each","i","el","push","text","urlsImgId1","filter","n","undefined","urlsImgId2","urlsImgId3","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,SAAS,EAAE,EADO;AAElBC,EAAAA,YAAY,EAAE,EAFI;AAGlBC,EAAAA,OAAO,EAAE,EAHS;AAIlBC,EAAAA,MAAM,EAAE;AAJU,CAApB;AAMA,MAAMC,SAAS,GAAC;AACdD,EAAAA,MAAM,EAAE,gBADM;AAEdE,EAAAA,YAAY,EAAE,KAFA;AAGdH,EAAAA,OAAO,EAAE,KAHK;AAIdI,EAAAA,KAAK,EAAE;AAJO,CAAhB;AAOA;;;;AAIC,MAAMC,QAAQ,GAAG;AACfC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AACLC,MAAAA,GAAG,EAAE,2DADA;AAELC,MAAAA,MAAM,EAAE,aAFH;AAGLC,MAAAA,KAAK,EAAE,wBAHF;AAILC,MAAAA,KAAK,EAAE,+BAJF;AAKLC,MAAAA,OAAO,EAAE;AALJ;AADD;AADM,CAAjB,C,CAcD;;AACA,gBAAe,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;AACA,MAAIG,GAAG,GAAC,CAAR;AACA,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EACb;AAAK,MAAA,KAAK,EAAEnB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAXD,E,CAaA;;AACA,OAAO,eAAeoB,kBAAf,GAAmC;AACxC,MAAIC,GAAG,GAAGb,QAAQ,CAACC,OAAT,CAAiBC,MAAjB,CAAwBC,GAAlC;AACA,MAAIW,UAAU,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAUF,GAAV,CAAvB;AAEA,MAAIG,CAAC,GAAG7B,OAAO,CAAC8B,IAAR,CAAaH,UAAU,CAACI,IAAxB,CAAR;AACA,MAAIC,KAAK,GAAC,EAAV;AACA,MAAIb,KAAK,GAAG,EAAZ;AACA,MAAIc,IAAI,GAAG,EAAX;AACA,MAAIC,IAAI,GAAC,EAAT;AACA,MAAIC,WAAW,GAAG,EAAlB;AACAN,EAAAA,CAAC,CAAChB,QAAQ,CAACC,OAAT,CAAiBC,MAAjB,CAAwBE,MAAzB,CAAD,CACCmB,IADD,CACMvB,QAAQ,CAACC,OAAT,CAAiBC,MAAjB,CAAwBG,KAD9B,EAECkB,IAFD,CAEMvB,QAAQ,CAACC,OAAT,CAAiBC,MAAjB,CAAwBI,KAF9B,EAGCkB,IAHD,CAGM,CAACC,CAAD,EAAIC,EAAJ,KAAS;AACbpB,IAAAA,KAAK,CAACqB,IAAN,CAAYX,CAAC,CAACU,EAAD,CAAD,CAAME,IAAN,EAAZ;AACD,GALD;AAMA,QAAMC,UAAU,GAAGvB,KAAK,CAACwB,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIC,SAAvB,CAAnB;AACA,QAAMC,UAAU,GAAGZ,IAAI,CAACS,MAAL,CAAYC,CAAC,IAAIA,CAAC,IAAIC,SAAtB,CAAnB;AACA,QAAME,UAAU,GAAGd,IAAI,CAACU,MAAL,CAAYC,CAAC,IAAIA,CAAC,IAAIC,SAAtB,CAAnB;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACL3B,MAAAA,MAAM,EAAEqB;AADH;AADF,GAAP;AAMD","sourcesContent":["import Layout from './components/MyLayout';\r\nimport cheerio from 'cheerio';\r\nimport axios from 'axios';\r\nimport React, {useState} from 'react';\r\nimport Post from './components/Post'\r\n\r\nconst layoutStyle = {\r\n  marginTop: 10,\r\n  marginBottom: 20,\r\n  padding: 20,\r\n  border: '1px solid #DDD'\r\n};\r\nconst postStyle={\r\n  border: '1px solid #ddd',\r\n  borderRadius: '4px',\r\n  padding: '5px',\r\n  width: '200px',\r\n};\r\n\r\n/****\r\n * Bat dau config\r\n */\r\n\r\n const myConfig = {\r\n   webSite: {\r\n     muctim: {\r\n        url: 'https://vn.indeed.com/jobs?q=&l=Vi%E1%BB%87t+Nam&start=10',\r\n        parent: '#resultsCol',\r\n        child: '.jobsearch-SerpJobCard',\r\n        title: 'a[data-tn-element=\"jobTitle\"]',\r\n        company: '',\r\n     },\r\n    },\r\n }\r\n\r\n\r\n\r\n// client side\r\nexport default ({props1}) => {\r\n  console.log({props1})\r\n  let key=0;\r\n  return (\r\n    <Layout content={\r\n      <div style={layoutStyle}>\r\n        <h2>Result</h2>\r\n        \r\n      </div>\r\n    }/>  \r\n  )\r\n}\r\n\r\n// server side\r\nexport async function getServerSideProps(){\r\n  let URL = myConfig.webSite.muctim.url\r\n  let resFromUrl = await axios.get(URL)\r\n\r\n  let $ = cheerio.load(resFromUrl.data)\r\n  let links=[];\r\n  let title = [];\r\n  let time = [];\r\n  let imgs=[];\r\n  let description = [];\r\n  $(myConfig.webSite.muctim.parent)\r\n  .find(myConfig.webSite.muctim.child)\r\n  .find(myConfig.webSite.muctim.title)\r\n  .each((i, el)=>{\r\n    title.push(($(el).text()))\r\n  })\r\n  const urlsImgId1 = title.filter(n => n != undefined )\r\n  const urlsImgId2 = imgs.filter(n => n != undefined )\r\n  const urlsImgId3 = time.filter(n => n != undefined )\r\n\r\n  return {\r\n    props: {\r\n      props1: urlsImgId1,\r\n    }\r\n  }  \r\n\r\n}"]},"metadata":{},"sourceType":"module"}